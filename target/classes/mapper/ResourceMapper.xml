<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyj.dao.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.zyj.model.Resource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="resource_name" jdbcType="VARCHAR" property="resourceName" />
    <result column="resource_url" jdbcType="VARCHAR" property="resourceUrl" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <collection property="children" column="id" select="findResourceByPid" ofType="Resource"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, pid, resource_name, resource_url
  </sql>

  <select id="findUrlByRoleNames" resultType="Resource" >
    select rs.resource_url resourceUrl,rs.id,rs.resource_name resourceName,rs.seq,rs.icon,rs.pid
    from resource rs
    LEFT JOIN role_resource rr on rr.resource_id = rs.id
    LEFT JOIN role r on r.id = rr.role_id
    where pid is not null and r.role_name in
    <foreach collection="list" item="item" close=")" open="(" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="findMenuByRoleNames" resultMap="BaseResultMap" >
    select rs.resource_url,rs.id,rs.resource_name,rs.seq,rs.icon,rs.pid
    from resource rs
    LEFT JOIN role_resource rr on rr.resource_id = rs.id
    LEFT JOIN role r on r.id = rr.role_id
    where pid is null and r.role_name in
    <foreach collection="list" item="item" close=")" open="(" separator=",">
      #{item}
    </foreach>
  </select>
  
  <select id="findResourceByPid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from resource
    where pid = #{id,jdbcType=INTEGER}
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zyj.model.Resource">
    insert into resource (id, pid, resource_name, 
      resource_url)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{resourceName,jdbcType=VARCHAR}, 
      #{resourceUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zyj.model.Resource">
    insert into resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="resourceName != null">
        resource_name,
      </if>
      <if test="resourceUrl != null">
        resource_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="resourceName != null">
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceUrl != null">
        #{resourceUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyj.model.Resource">
    update resource
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="resourceName != null">
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceUrl != null">
        resource_url = #{resourceUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyj.model.Resource">
    update resource
    set pid = #{pid,jdbcType=INTEGER},
      resource_name = #{resourceName,jdbcType=VARCHAR},
      resource_url = #{resourceUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>